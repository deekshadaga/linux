                                                              CASE1.TXT 
######################################################################################################################################
1. launch an instance with Server Configure Details:

AWS Instance Type: t2.micro

AMI or Server OS: CentOS 7 (x86_64) - with Updates HVM

Disk Layout: 

-- Disk1: 8GB for / ( for the root volume )
-- Attach 2 more encrypted Volumes with disk accidental termination protection(untick on delete on termination) policy of at least 4GB Size of volume when you lauch your instance 

2.  use these commands to install and update basic requirements 
 
 fdisk -l
 yum install wget vim net-tools lvm2
 yum update

3.  create physical volumes

 pvcreate /dev/xvdb
 pvcreate /dev/xvdc
 pvs

4.  create virtual groups

 vgcreate vg-home /dev/xvdb
 vgcreate vg-mysql /dev/xvdc
 vgs

5.  create logical volumes

 lvcreate --name lv-home --size 3.9G vg-home
 lvcreate --name lv-mysql --size 3.9G vg-mysql

6.  format them with xfs

 mkfs.xfs /dev/vg-home/lv-home
 mkfs.xfs /dev/vg-mysql/lv-mysql

7.  mount them on respective directories

 mkdir /var/lib/mysql/ 
 mkdir /home2/
 mount /dev/vg-home/lv-home /home2/
 mount /dev/vg-mysql/lv-mysql /var/lib/mysql/  
 df -hT #to check if they are mounted properly

NOTE: for the terminal to connect using ssh we need to use "setenforce 0" to disable selinux if mounted on /home/
 
8.  make entry in /etc/fstab and check if it's done properly

 [root@ip-172-31-36-213 ~]# cat /etc/fstab

 #
 # /etc/fstab
 # Created by anaconda on Mon Jan 28 20:51:49 2019
 #
 # Accessible filesystems, by reference, are maintained under '/dev/disk'
 # See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info
 #
 UUID=f41e390f-835b-4223-a9bb-9b45984ddf8d /                       xfs     defaults        0 0
 /dev/vg-home/lv-home /home2/ xfs noexec,defaults 0 0
 /dev/vg-mysql/lv-mysql /var/lib/mysql/ xfs noexec,defaults 0 0

 [root@ip-172-31-36-213 ~]# mount -a # to check fstab entry

9.   reboot

########################################################################################################################################

1.  disable selinux 
 
 setenforce 0
  -- go to /etc/selinux/config or /etc/sysconfig/selinux then chenge SELINUX=enforcing into SELINUX=disable

2.  set IST timezone 

 timedatectl set-timezone Asia/Kolkata  

3.  set dynamic motd file using https://adhocnw.org/motd.txt

 [root@ip-172-31-36-213 ~]# cat /etc/profile.d/motd.sh
#!/bin/bash/
echo "
###############################################################
#                 Authorized access only!                     #
# Disconnect IMMEDIATELY if you are not an authorized user!!! #
#         All actions Will be monitored and recorded          #
###############################################################
+++++++++++++++++++++++++++++++ SERVER INFO ++++++++++++++++++++++++++++++++
"
a=$(cat /proc/cpuinfo | grep -w 'model name' | awk -F: '{print $2}')
echo "             CPU:$a                "
b=$(cat /proc/meminfo | grep -w 'MemTotal' | awk -F: '{print $2/1000}')
echo "             Memory: $b M               "
c=$(cat /proc/meminfo | grep -w 'SwapTotal' | awk -F: '{print $2/1000}')
echo "             Swap: $c M                "
d=$(sudo fdisk -l | egrep 'Disk.*bytes' | awk '{ sub(/,/,""); sum +=$3 } END { print sum/1000 }')
echo "             Disk: $d G                "
e=$(cat /etc/system-release)
echo "             Distro: $e                "
f=$( uptime | awk -F: '{print $5}')
echo "             CPU Load: $f               "
g=$(cat /proc/meminfo | grep -w 'MemFree' | awk -F: '{print $2/1000}')
echo "             Free Memory: $g M               "
h=$(cat /proc/meminfo | grep -w 'SwapFree' | awk -F: '{print $2/1000}')
echo "             Free Swap: $h M               "
i=$(df -h --total | grep -w 'total' | awk '{print $4}')
echo "             Free Disk: $i                "
j=$(wget -qO- ifconfig.co)
echo "             Public Address: $j                "
k=$(hostname -I)
echo "             Private Address: $k                "
echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"

output will be like -->

[centos@ip-172-31-36-213 ~]$ sudo -i

###############################################################
#                 Authorized access only!                     #
# Disconnect IMMEDIATELY if you are not an authorized user!!! #
#         All actions Will be monitored and recorded          #
###############################################################
+++++++++++++++++++++++++++++++ SERVER INFO ++++++++++++++++++++++++++++++++

             CPU: Intel(R) Xeon(R) CPU E5-2676 v3 @ 2.40GHz
             Memory: 1013.19 M
             Swap: 0 M
             Disk: 25.557 G
             Distro: CentOS Linux release 7.6.1810 (Core)
             CPU Load:
             Free Memory: 798.172 M
             Free Swap: 0 M
             Free Disk: 17G
             Public Address: 13.235.45.90
             Private Address: 172.31.36.213
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

1. Install Apache 2.4.x server with SSL and proxy module support

 yum install httpd
 yum install mod_ssl
 yum install mod_proxy

2. Install PHP v7.x with essential php modules like php-mysql, php-devel, php-mbstring etc which is required by Application.

 yum install php -y
 wget -q http://rpms.remirepo.net/enterprise/remi-release-7.rpm
 wget -q https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
 rpm -i remi-release-7.rpm epel-release-latest-7.noarch.rpm
 #FOR PHP 7.2 EXECUTE:
 yum-config-manager --enable remi-php72
 yum update -y
 yum install centos-release-scl -y
 yum install rh-php70-php rh-php70-php-common rh-php70-php-cli rh-php70-php-devel rh-php70-php-gd rh-php70-php-json rh-php70-php-         mbstring rh-php70-php-mysqlnd rh-php70-php-opcache rh-php70-php-zip -y
 
 [root@ip-172-31-36-213 ~]# php -v
 PHP 7.2.19 (cli) (built: May 29 2019 11:04:13) ( NTS )
 Copyright (c) 1997-2018 The PHP Group
 Zend Engine v3.2.0, Copyright (c) 1998-2018 Zend Technologies
  
 yum install php-mysql php-devel php-mbstring -y
 
 to setup php -->

 ln -s /opt/rh/httpd24/root/etc/httpd/conf.d/rh-php70-php.conf /etc/httpd/conf.d/
 ln -s /opt/rh/httpd24/root/etc/httpd/conf.modules.d/15-rh-php70-php.conf /etc/httpd/conf.modules.d/
 ln -s /opt/rh/httpd24/root/etc/httpd/modules/librh-php70-php7.so /etc/httpd/modules/
 ln -s /opt/rh/rh-php70/root/usr/bin/php /usr/bin/php
 
3.  Install Mariadb 10.3 stable Server [ You have to setup offical repo's from mariadb offical website and use gpgcheck=1 ]

 -> [root@ip-172-31-36-213 ~]# cat /etc/yum.repos.d/maria.repo
 [mariadb]
 name = MariaDB
 baseurl = http://yum.mariadb.org/10.3/rhel7-amd64
 gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
 gpgcheck=1
 
 -> yum install MariaDB-server MariaDB-client -y
 -> systemctl start mariadb 
 -> systemctl enable mariadb
 
 to secure your Mariadb Server and set strong root password and create two databases as wp and magento also to cretae two mysql user and   grant privildges to respective database -->
  
  -> vi mysql_secure.sql
  
UPDATE mysql.user
SET Password=PASSWORD('redhat2')
WHERE User='root';

DELETE FROM mysql.user
WHERE User='';

DELETE FROM mysql.user
WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');

DROP DATABASE IF EXISTS test;

DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%';

create database wp;

create database magento;

create user 'wp'@'localhost' identified by 'wp_app-209';

create user 'magento'@'localhost' identified by 'magento_app-209';

grant all privileges on wp.* to 'wp'@'localhost';

grant all privileges on magento.* to 'magento'@'localhost';

 -> mysql -sfu root < mysql_secure.sql
 -> rm -rf mysql_secure.sql


FLUSH PRIVILEGES;

##		-- Bind Mariadb Server with loopback IP or localhost or lo or 127.0.0.1
##		-- Increase the default value of max_allowed_packet to 1 GB so that mysqldump command will take backup of till 1GB size table otherwsie it will through error in mysqldump

to make your services automatically restart whenever server reboot in future -->

 ->systemctl start mariadb
 ->systemctl enable mariadb
  
4. User Setup:

	-- > Create 2 users as wp and magento with passwordless login for both user
  useradd -b /home2  wp
  useradd  -b /home2 magento
  # creating keygen for passwordless login for both the user
  mkdir -m 700 /home2/{wp,magento}/.ssh
	ssh-keygen -C "Keys generated for wordpress app" -N "" -f /home2/wp/.ssh/wp-key
  cat  /home2/wp/.ssh/wp-key.pub >> /home2/wp/.ssh/authorized_keys
  ssh-keygen -C "Keys generated for magento app" -N "" -f /home2/magento/.ssh/magento-key
  cat  /home2/magento/.ssh/magento-key.pub >> /home2/magento/.ssh/authorized_keys
  chmod 600  /home2/{wp,magento}/.ssh/authorized_keys
  chown wp:wp /home2/wp/.ssh -R
  chown magento:magento /home2/magento/.ssh -R
  
	-- > Create public_html folder under each user home2 directory 
   mkdir /home2/wp/public_html
   mkdir /home2/magento/public_html

	-- > Use this public_html folder for wp ( /home2/wp/public_html ) and magento ( /home2/magento/public_html ) web files and that will be your document root in Apache  

5.  setup wordpress and its VirtualHost Configuration

wget -P /tmp https://wordpress.org/latest.tar.gz
tar -xf /tmp/latest.tar.gz  -C  /home2/wp/public_html/
rm -rf  /tmp/latest.tar.gz
mv /home2/wp/public_html/wordpress/*   /home2/wp/public_html/
rm -rf  /home2/wp/public_html/wordpress/
usermod -a -G apache wp
chown  wp:apache  /home2/wp/public_html -R
chmod 711 /home2/wp
chmod 2771 /home2/wp/public_html
IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4) # Store ip in variable
vi /etc/httpd/conf.d/wp.conf
[root@ip-172-31-36-213 ~]# cat /etc/httpd/conf.d/wp.conf
  <VirtualHost $IP:80>

  ServerName  wp.adhocnw.com

  DocumentRoot  /home2/wp/public_html/

  <Directory /home2/wp/public_html/>
  Require all granted
  </Directory>

  </VirtualHost>

#restart http service

systemctl restart httpd


6. setup magento and its VirtualHost Configuration

wget -P /tmp https://github.com/magento/magento2/archive/2.1.0.tar.gz
tar -xf /tmp/2.1.0.tar.gz -C /home2/magento/public_html/
mv /home2/magento/public_html/magento2-2.1.0/* /home2/magento/public_html/
mv /home2/magento/public_html/magento2-2.1.0/.htaccess /home2/magento/public_html/
rm -rf /home2/magento/public_html/magento2-2.1.0
usermod -a -G apache magento
chown  magento:apache  /home2/magento/public_html -R
chmod 711 /home2/magento
chmod 2771 /home2/magento/public_html
IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)
vi /etc/httpd/conf.d/magento.conf
[root@ip-172-31-36-213 ~]# cat /etc/httpd/conf.d/magento.conf
  <VirtualHost $IP:80>

  ServerName magento.adhocnw.com

  DocumentRoot /home2/magento/public_html/

  <Directory /home2/magento/public_html/>

  Options Indexes FollowSymLinks
  MultiViews
      AllowOverride All

  Order allow,deny
      allow from all
    Require all granted
  </Directory>

  </VirtualHost>

### install extra php extension requirement for magento
curl -sS
https://getcomposer.org/installer | php
mv composer.phar /usr/bin/composer
rpm -ivh http://springdale.math.ias.edu/data/puias/unsupported/7/x86_64//libmcrypt-2.5.8-13.sdl7.x86_64.rpm
yum install sclo-php70-php-mcrypt rh-php70-php-xml rh-php70-php-intl -y

cd /home2/magento/public_html &&
composer install

chown magento:apache /home2/magento/public_html -R
###

## start apache server

* systemctl restart httpd


#Enable apache service

systemctl enable httpd

in progress...
